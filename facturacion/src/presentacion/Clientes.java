package presentacion;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Cliente;


public class Clientes extends javax.swing.JFrame
{

    public Clientes()
    {
        initComponents();
        Refrescar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton_consultar = new javax.swing.JButton();
        jButton_salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField_id = new javax.swing.JTextField();
        jTextField_nombres = new javax.swing.JTextField();
        jTextField_apellidos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_codtipoid = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_listaclientes = new javax.swing.JTable();
        jButton_Consultar = new javax.swing.JButton();
        jButton_agregar = new javax.swing.JButton();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("CLIENTES");

        jButton_consultar.setText("Consultar");
        jButton_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_consultarActionPerformed(evt);
            }
        });

        jButton_salir.setText("Salir");
        jButton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salirActionPerformed(evt);
            }
        });

        jLabel2.setText("Id");

        jLabel3.setText("Nombres");

        jLabel4.setText("Apellidos");

        jLabel5.setText("CodtipoID");

        jComboBox_codtipoid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CC", "CE", "NIT", "RC", "PA", "PE", "PT" }));

        jTable_listaclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_listaclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_listaclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_listaclientes);

        jButton_Consultar.setText("Consultar");
        jButton_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConsultarActionPerformed(evt);
            }
        });

        jButton_agregar.setText("Agregar");
        jButton_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_agregarActionPerformed(evt);
            }
        });

        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });

        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jButton_Consultar)
                .addGap(18, 18, 18)
                .addComponent(jButton_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_actualizar)
                .addGap(18, 18, 18)
                .addComponent(jButton_eliminar)
                .addGap(23, 23, 23)
                .addComponent(jButton5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(jButton_consultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_salir))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox_codtipoid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField_id, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(32, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox_codtipoid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Consultar)
                    .addComponent(jButton_agregar)
                    .addComponent(jButton_actualizar)
                    .addComponent(jButton_eliminar)
                    .addComponent(jButton5))
                .addGap(388, 388, 388)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_consultar)
                    .addComponent(jButton_salir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(680, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(489, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salirActionPerformed

    }//GEN-LAST:event_jButton_salirActionPerformed

    private void jButton_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_consultarActionPerformed
      
       
    }//GEN-LAST:event_jButton_consultarActionPerformed

    private void jButton_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConsultarActionPerformed
        Refrescar();
    }//GEN-LAST:event_jButton_ConsultarActionPerformed

    public void Refrescar()
    {
        //Metodo para consultar los registros de la base de datos
        //Asigno las variables que contendran los datos del modelo
        Object[][] misdatos = new Object[1][4];
        //Creo las columnas para la tabla
        Object[] miscolumnas = {"Tipo ID","Id","Nombres","Apellidos"};
        //Declaro el modelo de datos
        DefaultTableModel mimodelo = new DefaultTableModel();
        //Asigno las columnas de la tabla
        mimodelo.setColumnIdentifiers(miscolumnas);
        //Asigno los datos del modelo a la tabla
        jTable_listaclientes.setModel(mimodelo);
        //Creo el objeto cliente
        Cliente micliente = new Cliente();
        //Obtengo la lista de clientes de la base de datos
        List<Cliente> misclientes = micliente.listarCliente();
        //Recorro la lista y asigno a cada elemento del modelo los valores de los campos de la base de datos
        for(Cliente clienteactual : misclientes)
        {
            //Asignar a cada casilla de la matriz un valor del campo en la base de datos
            misdatos[0][0] = clienteactual.getCodTipoId();
            misdatos[0][1] = clienteactual.getId();
            misdatos[0][2] = clienteactual.getNombres();
            misdatos[0][3] = clienteactual.getApellidos();
            //Agrego cada registro de la base de datos al modelo
            mimodelo.addRow(misdatos[0]);
        }
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            JOptionPane mensajesalir = new JOptionPane();
            int option = mensajesalir.showConfirmDialog(null,"¿Estás seguro de que quieres cerrar la aplicación?","Confirmación de cierre",mensajesalir.YES_NO_OPTION, mensajesalir.QUESTION_MESSAGE);
            if (option == JOptionPane.YES_OPTION)
            {
                System.exit(0);
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_agregarActionPerformed
        JOptionPane mimensaje = new JOptionPane();
        //Obtengo los valores de los elementos que dibuje en el formulario
        String micodtipoid = jComboBox_codtipoid.getSelectedItem().toString();
        int micedula = Integer.parseInt(jTextField_id.getText());
        String misnombres = jTextField_nombres.getText();
        String misapellidos = jTextField_apellidos.getText();
        //Creo el objeto cliente
        Cliente micliente = new Cliente();
        //Asigno los atributos al objeto cliente
        micliente.setCodTipoId(micodtipoid);
        micliente.setId(micedula);
        micliente.setNombres(misnombres);
        micliente.setApellidos(misapellidos);
        //Invoca el metodo para grabar en la base de datos de la clase cliente
        if(micliente.guardarCliente()==true)
        {
            mimensaje.showMessageDialog(this,"¡El cliente fue agregado exitosamente!","Confirmación de registro", mimensaje.INFORMATION_MESSAGE);
            Refrescar();
        }
        else
        {
            mimensaje.showMessageDialog(this,"¡No fue posible agregar el cliente!","Error de registro", mimensaje.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_agregarActionPerformed

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        JOptionPane mimensaje = new JOptionPane();
        //Obtengo los valores de los elementos que dibuje en el formulario
        String micodtipoid = jComboBox_codtipoid.getSelectedItem().toString();
        int micedula = Integer.parseInt(jTextField_id.getText());
        String misnombres = jTextField_nombres.getText();
        String misapellidos = jTextField_apellidos.getText();
        //Creo el objeto cliente
        Cliente micliente = new Cliente();
        //Asigno los atributos al objeto cliente
        micliente.setCodTipoId(micodtipoid);
        micliente.setId(micedula);
        micliente.setNombres(misnombres);
        micliente.setApellidos(misapellidos);
        //Invoca el metodo para grabar en la base de datos de la clase cliente
        if(micliente.actualizarCliente()==true)
        {
            mimensaje.showMessageDialog(this,"¡El cliente fue actualizado exitosamente!","Confirmación de actualización", mimensaje.INFORMATION_MESSAGE);
            Refrescar();
        }
        else
        {
            mimensaje.showMessageDialog(this,"¡No fue posible actualizar el cliente!","Error de actualización", mimensaje.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        JOptionPane mimensaje = new JOptionPane();
        //Obtengo los valores de los elementos que dibuje en el formulario
        String micodtipoid = jComboBox_codtipoid.getSelectedItem().toString();
        int micedula = Integer.parseInt(jTextField_id.getText());
        //Creo el objeto cliente
        Cliente micliente = new Cliente();
        //Asigno los atributos al objeto cliente
        micliente.setCodTipoId(micodtipoid);
        micliente.setId(micedula);
        //Invoca el metodo para grabar en la base de datos de la clase cliente
        if(micliente.borrarCliente()==true)
        {
            mimensaje.showMessageDialog(this,"¡El cliente fue eliminado exitosamente!","Confirmación de borrado", mimensaje.WARNING_MESSAGE);
            Refrescar();
        }
        else
        {
            mimensaje.showMessageDialog(this,"¡No fue posible borrar el cliente!","Error de borrado", mimensaje.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jTable_listaclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_listaclientesMouseClicked
       int registroactual = jTable_listaclientes.getSelectedRow();
       jComboBox_codtipoid.setSelectedItem(jTable_listaclientes.getValueAt(registroactual,0).toString());
       jTextField_id.setText(jTable_listaclientes.getValueAt(registroactual,1).toString());
       jTextField_nombres.setText(jTable_listaclientes.getValueAt(registroactual,2).toString());
       jTextField_apellidos.setText(jTable_listaclientes.getValueAt(registroactual,3).toString());
    }//GEN-LAST:event_jTable_listaclientesMouseClicked
    
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton_Consultar;
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_agregar;
    private javax.swing.JButton jButton_consultar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_salir;
    private javax.swing.JComboBox<String> jComboBox_codtipoid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_listaclientes;
    private javax.swing.JTextField jTextField_apellidos;
    private javax.swing.JTextField jTextField_id;
    private javax.swing.JTextField jTextField_nombres;
    // End of variables declaration//GEN-END:variables
}
